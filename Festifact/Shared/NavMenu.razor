@inject HttpClient httpClient
@inject NavigationManager navigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Festifact</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @if (!isLoggedIn)
        {
            <div class="nav-item px-3" style="@(isLoggedIn ? "display: none;" : "")">
                <NavLink class="nav-link" onclick="@(() => GoToRegisterPage())">
                    <span class="oi oi-person" aria-hidden="true"></span> Register
                </NavLink>
            </div>
            <div class="nav-item px-3" style="@(isLoggedIn ? "display: none;" : "")">
                <NavLink class="nav-link" onclick="@(() => GoToLoginPage())">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Log in
                </NavLink>
            </div>
            <div class="nav-item px-3" style="@(isLoggedIn ? "display: none;" : "")">
                <NavLink class="nav-link" onclick="@(() => GoToOrganisatorRegisterPage())">
                    <span class="oi oi-people" aria-hidden="true"></span> Register organisator
                </NavLink>
            </div>
            <div class="nav-item px-3" style="@(isLoggedIn ? "display: none;" : "")">
                <NavLink class="nav-link" onclick="@(() => GoToOrganisatorLoginPage())">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Log in organisator
                </NavLink>
            </div>
        }
        @if (isLoggedIn && isBezoeker)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/festivals">
                    <span class="oi oi-list" aria-hidden="true"></span> Festivals
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" onclick="@(() => GoToFavoriteArtistsPage())">
                    <span class="oi oi-heart" aria-hidden="true"></span> Favorite artists
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" onclick="@(() => GoToFavoriteShowsPage())">
                    <span class="oi oi-star" aria-hidden="true"></span> Favorite shows
                </NavLink>
            </div>
        }
        @if (isOrganisator)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="organisator-artiesten">
                    <span class="oi oi-pencil" aria-hidden="true"></span> Edit Artists
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="locaties">
                    <span class="oi oi-map" aria-hidden="true"></span> Edit Locations
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="organisator-festivals">
                    <span class="oi oi-calendar" aria-hidden="true"></span> Edit Festivals
                </NavLink>
            </div>
        }
        @if (isLoggedIn)
        {
            <div class="nav-item px-3">
                <a class="nav-link" href="/" @onclick="LogOut">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Log out
                </a>
            </div>
        }
    </nav>
</div>


@code {
    private string bezoekerId;
    private string loggedInUserType;
    private bool isLoggedIn;
    private bool isBezoeker;
    private bool isOrganisator;

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        LoadUserType();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void LoadUserType()
    {
        bezoekerId = Preferences.Get("LoggedInUserId", string.Empty);
        loggedInUserType = Preferences.Get("LoggedInUserType", string.Empty);
        isLoggedIn = !string.IsNullOrEmpty(loggedInUserType);
        isBezoeker = isLoggedIn && loggedInUserType == "Bezoeker";
        isOrganisator = isLoggedIn && loggedInUserType == "Organisator";
    }

    private void GoToRegisterPage()
    {
        App.Current.MainPage.Navigation.PushAsync(new PagesMaui.Register(httpClient, navigationManager));
    }

    private void GoToLoginPage()
    {
        App.Current.MainPage.Navigation.PushAsync(new PagesMaui.Login(httpClient));
    }

    private void GoToOrganisatorRegisterPage()
    {
        App.Current.MainPage.Navigation.PushAsync(new PagesMaui.OrganisatorRegister(httpClient, navigationManager));
    }

    private void GoToOrganisatorLoginPage()
    {
        App.Current.MainPage.Navigation.PushAsync(new PagesMaui.OrganisatorLogin(httpClient));
    }

    private void GoToFavoriteArtistsPage()
    {
        navigationManager.NavigateTo($"/favoriteartiesten/{bezoekerId}");
    }

    private void GoToFavoriteShowsPage()
    {
        navigationManager.NavigateTo($"/favoritevoorstellingen/{bezoekerId}");
    }

    private void LogOut()
    {
        Preferences.Remove("LoggedInUserType");
        loggedInUserType = "";
        isLoggedIn = false;
        isBezoeker = false;
        isOrganisator = false;
    }
}
